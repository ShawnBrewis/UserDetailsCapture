@model UserDetailsCapture.Models.UserDetailsCaptureModel

@{
    ViewBag.Title = "Capture User Information Form";
}

<h2>User Details Capture</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-bottom: 0rem;">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })

            @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                listItems.Add(new SelectListItem
                {
                    Text = "South Africa",
                    Value = "South Africa",
                    Selected = true
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Europe",
                    Value = "Europe"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Australia",
                    Value = "Australia"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "New Zealand",
                    Value = "New Zealand"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Canada",
                    Value = "Canada"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "USA",
                    Value = "USA"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "China",
                    Value = "China"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Russia",
                    Value = "Russia"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Brazil",
                    Value = "Brazil"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Greenland",
                    Value = "Greenland"
                });
            }
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Country, listItems, new { htmlAttributes = new { @class = "form-control" }, style = "width: Inherit; height: 43px;" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FavouriteColour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div>
                    <label>
                        @Html.RadioButtonFor(model => model.FavouriteColour, "Red")
                        Red
                    </label>
                </div>
                <div>
                    <label>
                        @Html.RadioButtonFor(model => model.FavouriteColour, "Blue")
                        Blue
                    </label>
                </div>
                <div>
                    <label>
                        @Html.RadioButtonFor(model => model.FavouriteColour, "Green")
                        Green
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Day, Enumerable.Range(1, 31).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "Day")
                @Html.DropDownListFor(model => model.Month, Enumerable.Range(1, 12).Select(i => new SelectListItem { Value = i.ToString(), Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i) }), "Month")
                @Html.DropDownListFor(model => model.Year, Enumerable.Range(1900, 114).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "Year")
                @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CellphoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CellphoneNumber, new { htmlAttributes = new { @class = "form-control", @id = "phoneNumber" } })
                @Html.ValidationMessageFor(model => model.CellphoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-7"><button class="btnSubmittn btn-primary btn-lg" type="submit" id="btnSubmit" value="@ViewBag.SubmitValue">@ViewBag.SubmitValue</button></div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("phoneNumber").keyup(function () {
            $(this).val($(this).val().replace(/^(\d{2})(\d{5})(\d{4})+$/, "($1) $2-$3"));
        });
    });
</script>